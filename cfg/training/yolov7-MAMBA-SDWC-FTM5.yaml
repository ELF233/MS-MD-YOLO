# parameters
nc: 3  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# yolov7 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0

   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2
   [-1, 1, Conv, [64, 3, 1]],

   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4
   [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]],  # 11

   [-1, 1, MP, []],
   [-1, 1, Conv, [128, 1, 1]],
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 16-P3/8
   [-1, 1, MSC_5, [64, False]],     # new - 17-P3/8   MSC_2
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1]],  # 25

   [-1, 1, MP, []],
   [-1, 1, Conv, [256, 1, 1]],
   [-3, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 30-P4/16
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 38

   [-1, 1, MP, []],
   [-1, 1, Conv, [512, 1, 1]],
   [-3, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [512, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 43-P5/32
   [-1, 1, FTM5, [1024, 2, 1]],   # 44   FTM
   #[-1, 1, ConvTr, [1024, 1, 0.5]],   # 44   ConvTr
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 52
  ]

# yolov7 head
head:
  [[-1, 1, SPPCSPC, [512]], # 53

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [38, 1, Conv, [256, 1, 1]], # route backbone P4
   [[-1, -2], 1, Concat, [1]],

   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]], # 65

   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [25, 1, Conv, [128, 1, 1]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],

   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1]], # 77

   [-1, 1, MP, []],
   [-1, 1, Conv, [128, 1, 1]],
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, -3, 65], 1, Concat, [1]],

   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]], # 90

   [-1, 1, MP, []],
   [-1, 1, Conv, [256, 1, 1]],
   [-3, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, -3, 53], 1, Concat, [1]],

   [ -1, 1, DepthwiseConv, [ 512, 1, 1 ] ],  # 将卷积改为深度卷积
   [ -2, 1, DepthwiseConv, [ 512, 1, 1 ] ],  # 将卷积改为深度卷积
   [ -1, 1, DepthwiseConv, [ 256, 5, 1 ] ],  # 改为深度卷积，卷积核为 1*5，步幅为 1
   [ [ -1, OSSM, 1 ], 1, Mul, [ ] ],  # 将卷积输出与 OSSM 输出相乘
   [ -1, 1, DepthwiseConv, [ 256, 1, 5 ] ],  # 改为深度卷积，卷积核为 1*5，步幅为 1
   [ [ -1, OSSM, 2 ], 1, Mul, [ ] ],  # 将卷积输出与 OSSM 输出相乘
   [ -5, 1, DepthwiseConv, [ 256, 7, 1 ] ],  # 改为深度卷积，卷积核为 1*7，步幅为 1
   [ [ -1, OSSM, 3 ], 1, Mul, [ ] ],  # 将卷积输出与 OSSM 输出相乘
   [ -1, 1, DepthwiseConv, [ 256, 1, 7 ] ],  # 改为深度卷积，卷积核为 7*1，步幅为 1
   [ [ -1, OSSM, 4 ], 1, Mul, [ ] ],  # 将卷积输出与 OSSM 输出相乘
   [ [ -1,  -5, -9, -10 ], 1, Concat, [ 1 ] ],  # 拼接深度卷积和 OSSM 模块的输出
   [ -1, 1, DepthwiseConv, [ 512, 1, 1 ] ],  # 将卷积改为深度卷积

   [77, 1, RepConv, [256, 3, 1]],
   [ -1, 1, MAMBA, [ 256, 4, 1, 1, 0.1, 2, 1 ] ],
   [ [ -1, -2 ], 1, Concat, [ 1 ] ],  # cat
   [ -1, 1, Conv, [ 256, 1, 1 ] ], # fuse
   [90, 1, RepConv, [512, 3, 1]],
   [ -1, 1, MAMBA, [ 512, 8, 1, 1, 0.1, 2, 1 ] ],
   [ [ -1, -2 ], 1, Concat, [ 1 ] ],  # cat
   [ -1, 1, Conv, [ 512, 1, 1 ] ], # fuse
   [103, 1, RepConv, [1024, 3, 1]],
   [ -1, 1, MAMBA, [ 1024, 16, 1, 1, 0.1, 2, 1 ] ],
   [ [ -1, -2 ], 1, Concat, [ 1 ] ],  # cat
   [ -1, 1, Conv, [ 1024, 1, 1 ] ], # fuse

   # [[102,103,104], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
   [[107,111,115], 1, IDetect, [nc, anchors]],   # New Detect(P3, P4, P5)
  ]
